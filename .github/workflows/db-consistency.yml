name: Database Consistency

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  schema-drift:
    name: Prevent uncommitted migration drift
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Generate migrations (should be a no-op)
        run: npm run db:gen

      - name: Fail if migrations changed
        run: |
          git status --porcelain
          if ! git diff --exit-code -- utils/migrations/; then
            echo "Drizzle generated new migration files. Commit them or reconcile schema before merging." >&2
            exit 1
          fi

  migrate-and-seed:
    name: Apply migrations on fresh Postgres and run seeds
    runs-on: ubuntu-latest
    needs: schema-drift
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Wait for Postgres
        run: |
          for i in {1..20}; do
            (echo > /dev/tcp/localhost/5432) >/dev/null 2>&1 && break
            sleep 1
          done

      - name: Apply migrations
        run: npm run db:mig

      - name: Run seeds
        run: npm run db:seed
