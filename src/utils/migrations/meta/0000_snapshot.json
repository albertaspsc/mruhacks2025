{
  "id": "00000000-0000-0000-0000-000000000000",
  "prevId": "",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "auth.instances": {
      "name": "instances",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "uuid": {
          "name": "uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "raw_base_config": {
          "name": "raw_base_config",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": true
    },
    "auth.users": {
      "name": "users",
      "schema": "auth",
      "columns": {
        "instance_id": {
          "name": "instance_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "aud": {
          "name": "aud",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "role": {
          "name": "role",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "encrypted_password": {
          "name": "encrypted_password",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "email_confirmed_at": {
          "name": "email_confirmed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "invited_at": {
          "name": "invited_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "confirmation_token": {
          "name": "confirmation_token",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "confirmation_sent_at": {
          "name": "confirmation_sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "recovery_token": {
          "name": "recovery_token",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "recovery_sent_at": {
          "name": "recovery_sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "email_change_token_new": {
          "name": "email_change_token_new",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "email_change": {
          "name": "email_change",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "email_change_sent_at": {
          "name": "email_change_sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "last_sign_in_at": {
          "name": "last_sign_in_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "raw_app_meta_data": {
          "name": "raw_app_meta_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "raw_user_meta_data": {
          "name": "raw_user_meta_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "is_super_admin": {
          "name": "is_super_admin",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "NULL"
        },
        "phone_confirmed_at": {
          "name": "phone_confirmed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "phone_change": {
          "name": "phone_change",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "''"
        },
        "phone_change_token": {
          "name": "phone_change_token",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false,
          "default": "''"
        },
        "phone_change_sent_at": {
          "name": "phone_change_sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "confirmed_at": {
          "name": "confirmed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "LEAST(email_confirmed_at, phone_confirmed_at)",
            "type": "stored"
          }
        },
        "email_change_token_current": {
          "name": "email_change_token_current",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false,
          "default": "''"
        },
        "email_change_confirm_status": {
          "name": "email_change_confirm_status",
          "type": "smallint",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "banned_until": {
          "name": "banned_until",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "reauthentication_token": {
          "name": "reauthentication_token",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false,
          "default": "''"
        },
        "reauthentication_sent_at": {
          "name": "reauthentication_sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "is_sso_user": {
          "name": "is_sso_user",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "is_anonymous": {
          "name": "is_anonymous",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        }
      },
      "indexes": {
        "confirmation_token_idx": {
          "name": "confirmation_token_idx",
          "columns": [
            {
              "expression": "confirmation_token",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "where": "((confirmation_token)::text !~ '^[0-9 ]*$'::text)",
          "with": {}
        },
        "email_change_token_current_idx": {
          "name": "email_change_token_current_idx",
          "columns": [
            {
              "expression": "email_change_token_current",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "where": "((email_change_token_current)::text !~ '^[0-9 ]*$'::text)",
          "with": {}
        },
        "email_change_token_new_idx": {
          "name": "email_change_token_new_idx",
          "columns": [
            {
              "expression": "email_change_token_new",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "where": "((email_change_token_new)::text !~ '^[0-9 ]*$'::text)",
          "with": {}
        },
        "reauthentication_token_idx": {
          "name": "reauthentication_token_idx",
          "columns": [
            {
              "expression": "reauthentication_token",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "where": "((reauthentication_token)::text !~ '^[0-9 ]*$'::text)",
          "with": {}
        },
        "recovery_token_idx": {
          "name": "recovery_token_idx",
          "columns": [
            {
              "expression": "recovery_token",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "where": "((recovery_token)::text !~ '^[0-9 ]*$'::text)",
          "with": {}
        },
        "users_email_partial_key": {
          "name": "users_email_partial_key",
          "columns": [
            {
              "expression": "email",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "where": "(is_sso_user = false)",
          "with": {}
        },
        "users_instance_id_email_idx": {
          "name": "users_instance_id_email_idx",
          "columns": [
            {
              "expression": "instance_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": true
            },
            {
              "expression": "lower((email)::text)",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": true
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_instance_id_idx": {
          "name": "users_instance_id_idx",
          "columns": [
            {
              "expression": "instance_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_is_anonymous_idx": {
          "name": "users_is_anonymous_idx",
          "columns": [
            {
              "expression": "is_anonymous",
              "asc": true,
              "nulls": "last",
              "opclass": "bool_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "users_email_change_confirm_status_check": {
          "name": "users_email_change_confirm_status_check",
          "value": "(email_change_confirm_status >= 0) AND (email_change_confirm_status <= 2)"
        }
      },
      "policies": {},
      "isRLSEnabled": true
    },
    "auth.audit_log_entries": {
      "name": "audit_log_entries",
      "schema": "auth",
      "columns": {
        "instance_id": {
          "name": "instance_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "payload": {
          "name": "payload",
          "type": "json",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "ip_address": {
          "name": "ip_address",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": true,
          "default": "''"
        }
      },
      "indexes": {
        "audit_logs_instance_id_idx": {
          "name": "audit_logs_instance_id_idx",
          "columns": [
            {
              "expression": "instance_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": true
    },
    "auth.saml_relay_states": {
      "name": "saml_relay_states",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "sso_provider_id": {
          "name": "sso_provider_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "request_id": {
          "name": "request_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "for_email": {
          "name": "for_email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "redirect_to": {
          "name": "redirect_to",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "flow_state_id": {
          "name": "flow_state_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "saml_relay_states_created_at_idx": {
          "name": "saml_relay_states_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "saml_relay_states_for_email_idx": {
          "name": "saml_relay_states_for_email_idx",
          "columns": [
            {
              "expression": "for_email",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "saml_relay_states_sso_provider_id_idx": {
          "name": "saml_relay_states_sso_provider_id_idx",
          "columns": [
            {
              "expression": "sso_provider_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "saml_relay_states_sso_provider_id_fkey": {
          "name": "saml_relay_states_sso_provider_id_fkey",
          "tableFrom": "saml_relay_states",
          "tableTo": "sso_providers",
          "schemaTo": "auth",
          "columnsFrom": ["sso_provider_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "saml_relay_states_flow_state_id_fkey": {
          "name": "saml_relay_states_flow_state_id_fkey",
          "tableFrom": "saml_relay_states",
          "tableTo": "flow_state",
          "schemaTo": "auth",
          "columnsFrom": ["flow_state_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "request_id not empty": {
          "name": "request_id not empty",
          "value": "char_length(request_id) > 0"
        }
      },
      "policies": {},
      "isRLSEnabled": true
    },
    "auth.refresh_tokens": {
      "name": "refresh_tokens",
      "schema": "auth",
      "columns": {
        "instance_id": {
          "name": "instance_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "revoked": {
          "name": "revoked",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "parent": {
          "name": "parent",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "session_id": {
          "name": "session_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "refresh_tokens_instance_id_idx": {
          "name": "refresh_tokens_instance_id_idx",
          "columns": [
            {
              "expression": "instance_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "refresh_tokens_instance_id_user_id_idx": {
          "name": "refresh_tokens_instance_id_user_id_idx",
          "columns": [
            {
              "expression": "instance_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "refresh_tokens_parent_idx": {
          "name": "refresh_tokens_parent_idx",
          "columns": [
            {
              "expression": "parent",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "refresh_tokens_session_id_revoked_idx": {
          "name": "refresh_tokens_session_id_revoked_idx",
          "columns": [
            {
              "expression": "session_id",
              "asc": true,
              "nulls": "last",
              "opclass": "bool_ops",
              "isExpression": false
            },
            {
              "expression": "revoked",
              "asc": true,
              "nulls": "last",
              "opclass": "bool_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "refresh_tokens_updated_at_idx": {
          "name": "refresh_tokens_updated_at_idx",
          "columns": [
            {
              "expression": "updated_at",
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "refresh_tokens_session_id_fkey": {
          "name": "refresh_tokens_session_id_fkey",
          "tableFrom": "refresh_tokens",
          "tableTo": "sessions",
          "schemaTo": "auth",
          "columnsFrom": ["session_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": true
    },
    "auth.sessions": {
      "name": "sessions",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "factor_id": {
          "name": "factor_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "aal": {
          "name": "aal",
          "type": "aal_level",
          "typeSchema": "auth",
          "primaryKey": false,
          "notNull": false
        },
        "not_after": {
          "name": "not_after",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "refreshed_at": {
          "name": "refreshed_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "ip": {
          "name": "ip",
          "type": "inet",
          "primaryKey": false,
          "notNull": false
        },
        "tag": {
          "name": "tag",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "sessions_not_after_idx": {
          "name": "sessions_not_after_idx",
          "columns": [
            {
              "expression": "not_after",
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "sessions_user_id_idx": {
          "name": "sessions_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "user_id_created_at_idx": {
          "name": "user_id_created_at_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "created_at",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "sessions_user_id_fkey": {
          "name": "sessions_user_id_fkey",
          "tableFrom": "sessions",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": true
    },
    "auth.sso_domains": {
      "name": "sso_domains",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "sso_provider_id": {
          "name": "sso_provider_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "domain": {
          "name": "domain",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "sso_domains_domain_idx": {
          "name": "sso_domains_domain_idx",
          "columns": [
            {
              "expression": "lower(domain)",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": true
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "sso_domains_sso_provider_id_idx": {
          "name": "sso_domains_sso_provider_id_idx",
          "columns": [
            {
              "expression": "sso_provider_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "sso_domains_sso_provider_id_fkey": {
          "name": "sso_domains_sso_provider_id_fkey",
          "tableFrom": "sso_domains",
          "tableTo": "sso_providers",
          "schemaTo": "auth",
          "columnsFrom": ["sso_provider_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "domain not empty": {
          "name": "domain not empty",
          "value": "char_length(domain) > 0"
        }
      },
      "policies": {},
      "isRLSEnabled": true
    },
    "auth.mfa_amr_claims": {
      "name": "mfa_amr_claims",
      "schema": "auth",
      "columns": {
        "session_id": {
          "name": "session_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "authentication_method": {
          "name": "authentication_method",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mfa_amr_claims_session_id_fkey": {
          "name": "mfa_amr_claims_session_id_fkey",
          "tableFrom": "mfa_amr_claims",
          "tableTo": "sessions",
          "schemaTo": "auth",
          "columnsFrom": ["session_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": true
    },
    "auth.saml_providers": {
      "name": "saml_providers",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "sso_provider_id": {
          "name": "sso_provider_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "entity_id": {
          "name": "entity_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "metadata_xml": {
          "name": "metadata_xml",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "metadata_url": {
          "name": "metadata_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "attribute_mapping": {
          "name": "attribute_mapping",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "name_id_format": {
          "name": "name_id_format",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "saml_providers_sso_provider_id_idx": {
          "name": "saml_providers_sso_provider_id_idx",
          "columns": [
            {
              "expression": "sso_provider_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "saml_providers_sso_provider_id_fkey": {
          "name": "saml_providers_sso_provider_id_fkey",
          "tableFrom": "saml_providers",
          "tableTo": "sso_providers",
          "schemaTo": "auth",
          "columnsFrom": ["sso_provider_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "metadata_xml not empty": {
          "name": "metadata_xml not empty",
          "value": "char_length(metadata_xml) > 0"
        },
        "metadata_url not empty": {
          "name": "metadata_url not empty",
          "value": "(metadata_url = NULL::text) OR (char_length(metadata_url) > 0)"
        },
        "entity_id not empty": {
          "name": "entity_id not empty",
          "value": "char_length(entity_id) > 0"
        }
      },
      "policies": {},
      "isRLSEnabled": true
    },
    "auth.flow_state": {
      "name": "flow_state",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "auth_code": {
          "name": "auth_code",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "code_challenge_method": {
          "name": "code_challenge_method",
          "type": "code_challenge_method",
          "typeSchema": "auth",
          "primaryKey": false,
          "notNull": true
        },
        "code_challenge": {
          "name": "code_challenge",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_type": {
          "name": "provider_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_access_token": {
          "name": "provider_access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "provider_refresh_token": {
          "name": "provider_refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "authentication_method": {
          "name": "authentication_method",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "auth_code_issued_at": {
          "name": "auth_code_issued_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "flow_state_created_at_idx": {
          "name": "flow_state_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_auth_code": {
          "name": "idx_auth_code",
          "columns": [
            {
              "expression": "auth_code",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_user_id_auth_method": {
          "name": "idx_user_id_auth_method",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "authentication_method",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": true
    },
    "auth.identities": {
      "name": "identities",
      "schema": "auth",
      "columns": {
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "identity_data": {
          "name": "identity_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "provider": {
          "name": "provider",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "last_sign_in_at": {
          "name": "last_sign_in_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "lower((identity_data ->> 'email'::text))",
            "type": "stored"
          }
        },
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true,
          "default": "gen_random_uuid()"
        }
      },
      "indexes": {
        "identities_email_idx": {
          "name": "identities_email_idx",
          "columns": [
            {
              "expression": "email",
              "asc": true,
              "nulls": "last",
              "opclass": "text_pattern_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "identities_user_id_idx": {
          "name": "identities_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "identities_user_id_fkey": {
          "name": "identities_user_id_fkey",
          "tableFrom": "identities",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": true
    },
    "auth.one_time_tokens": {
      "name": "one_time_tokens",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "token_type": {
          "name": "token_type",
          "type": "one_time_token_type",
          "typeSchema": "auth",
          "primaryKey": false,
          "notNull": true
        },
        "token_hash": {
          "name": "token_hash",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "relates_to": {
          "name": "relates_to",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "one_time_tokens_relates_to_hash_idx": {
          "name": "one_time_tokens_relates_to_hash_idx",
          "columns": [
            {
              "expression": "relates_to",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "hash",
          "with": {}
        },
        "one_time_tokens_token_hash_hash_idx": {
          "name": "one_time_tokens_token_hash_hash_idx",
          "columns": [
            {
              "expression": "token_hash",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "hash",
          "with": {}
        },
        "one_time_tokens_user_id_token_type_key": {
          "name": "one_time_tokens_user_id_token_type_key",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            },
            {
              "expression": "token_type",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "one_time_tokens_user_id_fkey": {
          "name": "one_time_tokens_user_id_fkey",
          "tableFrom": "one_time_tokens",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "one_time_tokens_token_hash_check": {
          "name": "one_time_tokens_token_hash_check",
          "value": "char_length(token_hash) > 0"
        }
      },
      "policies": {},
      "isRLSEnabled": true
    },
    "auth.mfa_factors": {
      "name": "mfa_factors",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "friendly_name": {
          "name": "friendly_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "factor_type": {
          "name": "factor_type",
          "type": "factor_type",
          "typeSchema": "auth",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "factor_status",
          "typeSchema": "auth",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "secret": {
          "name": "secret",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "last_challenged_at": {
          "name": "last_challenged_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "web_authn_credential": {
          "name": "web_authn_credential",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "web_authn_aaguid": {
          "name": "web_authn_aaguid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "factor_id_created_at_idx": {
          "name": "factor_id_created_at_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            },
            {
              "expression": "created_at",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "mfa_factors_user_friendly_name_unique": {
          "name": "mfa_factors_user_friendly_name_unique",
          "columns": [
            {
              "expression": "friendly_name",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "where": "(TRIM(BOTH FROM friendly_name) <> ''::text)",
          "with": {}
        },
        "mfa_factors_user_id_idx": {
          "name": "mfa_factors_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "unique_phone_factor_per_user": {
          "name": "unique_phone_factor_per_user",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            },
            {
              "expression": "phone",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "mfa_factors_user_id_fkey": {
          "name": "mfa_factors_user_id_fkey",
          "tableFrom": "mfa_factors",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": true
    },
    "auth.mfa_challenges": {
      "name": "mfa_challenges",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "factor_id": {
          "name": "factor_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "verified_at": {
          "name": "verified_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "ip_address": {
          "name": "ip_address",
          "type": "inet",
          "primaryKey": false,
          "notNull": true
        },
        "otp_code": {
          "name": "otp_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "web_authn_session_data": {
          "name": "web_authn_session_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "mfa_challenge_created_at_idx": {
          "name": "mfa_challenge_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "mfa_challenges_auth_factor_id_fkey": {
          "name": "mfa_challenges_auth_factor_id_fkey",
          "tableFrom": "mfa_challenges",
          "tableTo": "mfa_factors",
          "schemaTo": "auth",
          "columnsFrom": ["factor_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": true
    },
    "auth.sso_providers": {
      "name": "sso_providers",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "resource_id": {
          "name": "resource_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "disabled": {
          "name": "disabled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "sso_providers_resource_id_idx": {
          "name": "sso_providers_resource_id_idx",
          "columns": [
            {
              "expression": "lower(resource_id)",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": true
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "sso_providers_resource_id_pattern_idx": {
          "name": "sso_providers_resource_id_pattern_idx",
          "columns": [
            {
              "expression": "resource_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_pattern_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "resource_id not empty": {
          "name": "resource_id not empty",
          "value": "(resource_id = NULL::text) OR (char_length(resource_id) > 0)"
        }
      },
      "policies": {},
      "isRLSEnabled": true
    },
    "auth.oauth_clients": {
      "name": "oauth_clients",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "client_id": {
          "name": "client_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "client_secret_hash": {
          "name": "client_secret_hash",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "registration_type": {
          "name": "registration_type",
          "type": "oauth_registration_type",
          "typeSchema": "auth",
          "primaryKey": false,
          "notNull": true
        },
        "redirect_uris": {
          "name": "redirect_uris",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "grant_types": {
          "name": "grant_types",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "client_name": {
          "name": "client_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "client_uri": {
          "name": "client_uri",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "logo_uri": {
          "name": "logo_uri",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "oauth_clients_client_id_idx": {
          "name": "oauth_clients_client_id_idx",
          "columns": [
            {
              "expression": "client_id",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "oauth_clients_deleted_at_idx": {
          "name": "oauth_clients_deleted_at_idx",
          "columns": [
            {
              "expression": "deleted_at",
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "oauth_clients_client_name_length": {
          "name": "oauth_clients_client_name_length",
          "value": "char_length(client_name) <= 1024"
        },
        "oauth_clients_client_uri_length": {
          "name": "oauth_clients_client_uri_length",
          "value": "char_length(client_uri) <= 2048"
        },
        "oauth_clients_logo_uri_length": {
          "name": "oauth_clients_logo_uri_length",
          "value": "char_length(logo_uri) <= 2048"
        }
      },
      "policies": {},
      "isRLSEnabled": false
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "f_name": {
          "name": "f_name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "l_name": {
          "name": "l_name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "gender": {
          "name": "gender",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "university": {
          "name": "university",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "prev_attendance": {
          "name": "prev_attendance",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "major": {
          "name": "major",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "parking": {
          "name": "parking",
          "type": "parking_state",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "yearOfStudy": {
          "name": "yearOfStudy",
          "type": "year_of_study",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "experience": {
          "name": "experience",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "accommodations": {
          "name": "accommodations",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "marketing": {
          "name": "marketing",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "timestamp": {
          "name": "timestamp",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'waitlisted'"
        },
        "checked_in": {
          "name": "checked_in",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "resume_url": {
          "name": "resume_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "resume_filename": {
          "name": "resume_filename",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "pending_email": {
          "name": "pending_email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email_change_requested_at": {
          "name": "email_change_requested_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_users_resume_url": {
          "name": "idx_users_resume_url",
          "columns": [
            {
              "expression": "resume_url",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "where": "(resume_url IS NOT NULL)",
          "with": {}
        }
      },
      "foreignKeys": {
        "users_auth_user_fkey": {
          "name": "users_auth_user_fkey",
          "tableFrom": "users",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "users_experience_experience_types_id_fk": {
          "name": "users_experience_experience_types_id_fk",
          "tableFrom": "users",
          "tableTo": "experience_types",
          "schemaTo": "public",
          "columnsFrom": ["experience"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "users_gender_gender_id_fk": {
          "name": "users_gender_gender_id_fk",
          "tableFrom": "users",
          "tableTo": "gender",
          "schemaTo": "public",
          "columnsFrom": ["gender"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "users_id_fkey": {
          "name": "users_id_fkey",
          "tableFrom": "users",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "users_id_users_id_fk": {
          "name": "users_id_users_id_fk",
          "tableFrom": "users",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "users_major_majors_id_fk": {
          "name": "users_major_majors_id_fk",
          "tableFrom": "users",
          "tableTo": "majors",
          "schemaTo": "public",
          "columnsFrom": ["major"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "users_marketing_marketing_types_id_fk": {
          "name": "users_marketing_marketing_types_id_fk",
          "tableFrom": "users",
          "tableTo": "marketing_types",
          "schemaTo": "public",
          "columnsFrom": ["marketing"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "users_university_universities_id_fk": {
          "name": "users_university_universities_id_fk",
          "tableFrom": "users",
          "tableTo": "universities",
          "schemaTo": "public",
          "columnsFrom": ["university"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Users can delete their own registrations": {
          "name": "Users can delete their own registrations",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["public"],
          "using": "(auth.uid() = id)"
        },
        "users_insert_own": {
          "name": "users_insert_own",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"]
        },
        "users_select_own": {
          "name": "users_select_own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"]
        },
        "users_update_own": {
          "name": "users_update_own",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"]
        }
      },
      "isRLSEnabled": true
    },
    "public.admins": {
      "name": "admins",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "is_admin_only": {
          "name": "is_admin_only",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "f_name": {
          "name": "f_name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": false
        },
        "l_name": {
          "name": "l_name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": false
        },
        "role": {
          "name": "role",
          "type": "admin_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'admin'"
        },
        "status": {
          "name": "status",
          "type": "admin_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'active'"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_admins_email": {
          "name": "idx_admins_email",
          "columns": [
            {
              "expression": "email",
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_admins_role": {
          "name": "idx_admins_role",
          "columns": [
            {
              "expression": "role",
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_admins_status": {
          "name": "idx_admins_status",
          "columns": [
            {
              "expression": "status",
              "asc": true,
              "nulls": "last",
              "opclass": "enum_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "admins_id_fkey": {
          "name": "admins_id_fkey",
          "tableFrom": "admins",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "admins_id_users_id_fk": {
          "name": "admins_id_users_id_fk",
          "tableFrom": "admins",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "admin_delete": {
          "name": "admin_delete",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["authenticated"],
          "using": "(is_super_admin() AND (auth.uid() <> id))"
        },
        "admin_insert": {
          "name": "admin_insert",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"]
        },
        "admin_update": {
          "name": "admin_update",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"]
        },
        "admin_view_own": {
          "name": "admin_view_own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"]
        }
      },
      "isRLSEnabled": true
    },
    "public.dietary_restrictions": {
      "name": "dietary_restrictions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "dietary_restrictions_id_seq",
            "increment": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "startWith": "1",
            "cache": "1",
            "cycle": false,
            "schema": "public"
          }
        },
        "restriction": {
          "name": "restriction",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "dietary_restrictions_restriction_unique": {
          "columns": ["restriction"],
          "nullsNotDistinct": false,
          "name": "dietary_restrictions_restriction_unique"
        }
      },
      "checkConstraints": {},
      "policies": {
        "dietary_restrictions_select_all": {
          "name": "dietary_restrictions_select_all",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["public"],
          "using": "true"
        }
      },
      "isRLSEnabled": false
    },
    "public.experience_types": {
      "name": "experience_types",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "experience_types_id_seq",
            "increment": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "startWith": "1",
            "cache": "1",
            "cycle": false,
            "schema": "public"
          }
        },
        "experience": {
          "name": "experience",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "experience_types_experience_unique": {
          "columns": ["experience"],
          "nullsNotDistinct": false,
          "name": "experience_types_experience_unique"
        }
      },
      "checkConstraints": {},
      "policies": {
        "experience_types_select_all": {
          "name": "experience_types_select_all",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["public"],
          "using": "true"
        }
      },
      "isRLSEnabled": false
    },
    "public.gender": {
      "name": "gender",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "gender_id_seq",
            "increment": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "startWith": "1",
            "cache": "1",
            "cycle": false,
            "schema": "public"
          }
        },
        "gender": {
          "name": "gender",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "gender_gender_unique": {
          "columns": ["gender"],
          "nullsNotDistinct": false,
          "name": "gender_gender_unique"
        }
      },
      "checkConstraints": {},
      "policies": {
        "gender_select_all": {
          "name": "gender_select_all",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["public"],
          "using": "true"
        }
      },
      "isRLSEnabled": false
    },
    "public.interests": {
      "name": "interests",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "interests_id_seq",
            "increment": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "startWith": "1",
            "cache": "1",
            "cycle": false,
            "schema": "public"
          }
        },
        "interest": {
          "name": "interest",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "interests_interest_unique": {
          "columns": ["interest"],
          "nullsNotDistinct": false,
          "name": "interests_interest_unique"
        }
      },
      "checkConstraints": {},
      "policies": {
        "interests_select_all": {
          "name": "interests_select_all",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["public"],
          "using": "true"
        }
      },
      "isRLSEnabled": false
    },
    "public.majors": {
      "name": "majors",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "majors_id_seq",
            "increment": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "startWith": "1",
            "cache": "1",
            "cycle": false,
            "schema": "public"
          }
        },
        "major": {
          "name": "major",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "majors_major_unique": {
          "columns": ["major"],
          "nullsNotDistinct": false,
          "name": "majors_major_unique"
        }
      },
      "checkConstraints": {},
      "policies": {
        "majors_insert_authenticated": {
          "name": "majors_insert_authenticated",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"],
          "withCheck": "true"
        },
        "majors_select_all": {
          "name": "majors_select_all",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["public"]
        }
      },
      "isRLSEnabled": false
    },
    "public.marketing_types": {
      "name": "marketing_types",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "marketing_types_id_seq",
            "increment": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "startWith": "1",
            "cache": "1",
            "cycle": false,
            "schema": "public"
          }
        },
        "marketing": {
          "name": "marketing",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "marketing_types_marketing_unique": {
          "columns": ["marketing"],
          "nullsNotDistinct": false,
          "name": "marketing_types_marketing_unique"
        }
      },
      "checkConstraints": {},
      "policies": {
        "marketing_types_select_all": {
          "name": "marketing_types_select_all",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["public"],
          "using": "true"
        }
      },
      "isRLSEnabled": false
    },
    "public.mktg_preferences": {
      "name": "mktg_preferences",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "send_emails": {
          "name": "send_emails",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mktg_preferences_id_fkey": {
          "name": "mktg_preferences_id_fkey",
          "tableFrom": "mktg_preferences",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": ["id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "mktg_preferences_id_users_id_fk": {
          "name": "mktg_preferences_id_users_id_fk",
          "tableFrom": "mktg_preferences",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": ["id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Admins can view all marketing preferences": {
          "name": "Admins can view all marketing preferences",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["public"],
          "using": "(EXISTS ( SELECT 1\n   FROM admins\n  WHERE ((admins.id = auth.uid()) AND (admins.status = 'active'::admin_status))))"
        },
        "Users can delete own marketing preferences": {
          "name": "Users can delete own marketing preferences",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["public"]
        },
        "Users can insert own marketing preferences": {
          "name": "Users can insert own marketing preferences",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["public"]
        },
        "Users can update own marketing preferences": {
          "name": "Users can update own marketing preferences",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["public"]
        },
        "Users can view own marketing preferences": {
          "name": "Users can view own marketing preferences",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["public"]
        }
      },
      "isRLSEnabled": true
    },
    "public.parking_info": {
      "name": "parking_info",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "license_plate": {
          "name": "license_plate",
          "type": "varchar(8)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "parking_info_id_fkey": {
          "name": "parking_info_id_fkey",
          "tableFrom": "parking_info",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": ["id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "parking_info_id_users_id_fk": {
          "name": "parking_info_id_users_id_fk",
          "tableFrom": "parking_info",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": ["id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Admins can update parking info": {
          "name": "Admins can update parking info",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["public"],
          "using": "(EXISTS ( SELECT 1\n   FROM admins\n  WHERE ((admins.id = auth.uid()) AND (admins.status = 'active'::admin_status))))"
        },
        "Admins can view all parking info": {
          "name": "Admins can view all parking info",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["public"]
        },
        "Users can delete own parking info": {
          "name": "Users can delete own parking info",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["public"]
        },
        "Users can insert own parking info": {
          "name": "Users can insert own parking info",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["public"]
        },
        "Users can update own parking info": {
          "name": "Users can update own parking info",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["public"]
        },
        "Users can view own parking info": {
          "name": "Users can view own parking info",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["public"]
        }
      },
      "isRLSEnabled": true
    },
    "public.profile": {
      "name": "profile",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "f_name": {
          "name": "f_name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "l_name": {
          "name": "l_name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "marketing_emails": {
          "name": "marketing_emails",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "parking": {
          "name": "parking",
          "type": "varchar(10)",
          "primaryKey": false,
          "notNull": false,
          "default": "'Not sure'"
        },
        "license_plate": {
          "name": "license_plate",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": false
        },
        "pending_email": {
          "name": "pending_email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email_change_requested_at": {
          "name": "email_change_requested_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "profile_auth_user_fkey": {
          "name": "profile_auth_user_fkey",
          "tableFrom": "profile",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "profile_id_fkey": {
          "name": "profile_id_fkey",
          "tableFrom": "profile",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "profile_id_users_id_fk": {
          "name": "profile_id_users_id_fk",
          "tableFrom": "profile",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {
        "profile_parking_check": {
          "name": "profile_parking_check",
          "value": "(parking)::text = ANY (ARRAY[('Yes'::character varying)::text, ('No'::character varying)::text, ('Not sure'::character varying)::text])"
        }
      },
      "policies": {
        "Users can delete their own profile": {
          "name": "Users can delete their own profile",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["public"],
          "using": "(auth.uid() = id)"
        },
        "users_insert_own_profile": {
          "name": "users_insert_own_profile",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"]
        },
        "users_update_own_profile": {
          "name": "users_update_own_profile",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"]
        },
        "users_view_own_profile": {
          "name": "users_view_own_profile",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"]
        }
      },
      "isRLSEnabled": true
    },
    "public.universities": {
      "name": "universities",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "universities_id_seq",
            "increment": "1",
            "minValue": "1",
            "maxValue": "2147483647",
            "startWith": "1",
            "cache": "1",
            "cycle": false,
            "schema": "public"
          }
        },
        "uni": {
          "name": "uni",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "universities_uni_unique": {
          "columns": ["uni"],
          "nullsNotDistinct": false,
          "name": "universities_uni_unique"
        }
      },
      "checkConstraints": {},
      "policies": {
        "universities_insert_authenticated": {
          "name": "universities_insert_authenticated",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"],
          "withCheck": "true"
        },
        "universities_select_all": {
          "name": "universities_select_all",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["public"]
        }
      },
      "isRLSEnabled": false
    },
    "public.user_diet_restrictions": {
      "name": "user_diet_restrictions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "restriction": {
          "name": "restriction",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_diet_restrictions_id_users_id_fk": {
          "name": "user_diet_restrictions_id_users_id_fk",
          "tableFrom": "user_diet_restrictions",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": ["id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "user_diet_restrictions_restriction_dietary_restrictions_id_fk": {
          "name": "user_diet_restrictions_restriction_dietary_restrictions_id_fk",
          "tableFrom": "user_diet_restrictions",
          "tableTo": "dietary_restrictions",
          "schemaTo": "public",
          "columnsFrom": ["restriction"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "user_diet_restrictions_user_fkey": {
          "name": "user_diet_restrictions_user_fkey",
          "tableFrom": "user_diet_restrictions",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": ["id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "user_restrictions_insert_own": {
          "name": "user_restrictions_insert_own",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"],
          "withCheck": "(auth.uid() = id)"
        },
        "user_restrictions_select_own": {
          "name": "user_restrictions_select_own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"]
        }
      },
      "isRLSEnabled": true
    },
    "public.user_interests": {
      "name": "user_interests",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "interest": {
          "name": "interest",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_interests_id_users_id_fk": {
          "name": "user_interests_id_users_id_fk",
          "tableFrom": "user_interests",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": ["id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "user_interests_interest_interests_id_fk": {
          "name": "user_interests_interest_interests_id_fk",
          "tableFrom": "user_interests",
          "tableTo": "interests",
          "schemaTo": "public",
          "columnsFrom": ["interest"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "user_interests_user_fkey": {
          "name": "user_interests_user_fkey",
          "tableFrom": "user_interests",
          "tableTo": "users",
          "schemaTo": "public",
          "columnsFrom": ["id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "user_interests_insert_own": {
          "name": "user_interests_insert_own",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"],
          "withCheck": "(auth.uid() = id)"
        },
        "user_interests_select_own": {
          "name": "user_interests_select_own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"]
        }
      },
      "isRLSEnabled": true
    },
    "public.workshop_registrations": {
      "name": "workshop_registrations",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "workshop_id": {
          "name": "workshop_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "registered_at": {
          "name": "registered_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "f_name": {
          "name": "f_name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "l_name": {
          "name": "l_name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "yearOfStudy": {
          "name": "yearOfStudy",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "gender": {
          "name": "gender",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "major": {
          "name": "major",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_workshop_registrations_user": {
          "name": "idx_workshop_registrations_user",
          "columns": [
            {
              "expression": "user_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_workshop_registrations_workshop": {
          "name": "idx_workshop_registrations_workshop",
          "columns": [
            {
              "expression": "workshop_id",
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "workshop_registrations_user_id_fkey": {
          "name": "workshop_registrations_user_id_fkey",
          "tableFrom": "workshop_registrations",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "workshop_registrations_user_id_users_id_fk": {
          "name": "workshop_registrations_user_id_users_id_fk",
          "tableFrom": "workshop_registrations",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "workshop_registrations_workshop_id_fkey": {
          "name": "workshop_registrations_workshop_id_fkey",
          "tableFrom": "workshop_registrations",
          "tableTo": "workshops",
          "schemaTo": "public",
          "columnsFrom": ["workshop_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "workshop_registrations_workshop_id_workshops_id_fk": {
          "name": "workshop_registrations_workshop_id_workshops_id_fk",
          "tableFrom": "workshop_registrations",
          "tableTo": "workshops",
          "schemaTo": "public",
          "columnsFrom": ["workshop_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "workshop_registrations_user_id_workshop_id_key": {
          "columns": ["user_id", "workshop_id"],
          "nullsNotDistinct": false,
          "name": "workshop_registrations_user_id_workshop_id_key"
        }
      },
      "checkConstraints": {},
      "policies": {
        "Allow admin read access to registrations": {
          "name": "Allow admin read access to registrations",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "true"
        },
        "Authenticated users can read registrations": {
          "name": "Authenticated users can read registrations",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"]
        },
        "Users can register for workshops": {
          "name": "Users can register for workshops",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["public"]
        },
        "Users can unregister from workshops": {
          "name": "Users can unregister from workshops",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["public"]
        },
        "Users can view their own registrations": {
          "name": "Users can view their own registrations",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["public"]
        }
      },
      "isRLSEnabled": true
    },
    "public.workshops": {
      "name": "workshops",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "title": {
          "name": "title",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "event_name": {
          "name": "event_name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "date": {
          "name": "date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "start_time": {
          "name": "start_time",
          "type": "time",
          "primaryKey": false,
          "notNull": true
        },
        "end_time": {
          "name": "end_time",
          "type": "time",
          "primaryKey": false,
          "notNull": true
        },
        "location": {
          "name": "location",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "max_capacity": {
          "name": "max_capacity",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_workshops_date": {
          "name": "idx_workshops_date",
          "columns": [
            {
              "expression": "date",
              "asc": true,
              "nulls": "last",
              "opclass": "date_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_workshops_event_date": {
          "name": "idx_workshops_event_date",
          "columns": [
            {
              "expression": "event_name",
              "asc": true,
              "nulls": "last",
              "opclass": "date_ops",
              "isExpression": false
            },
            {
              "expression": "date",
              "asc": true,
              "nulls": "last",
              "opclass": "date_ops",
              "isExpression": false
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {
        "Authenticated users can delete workshops": {
          "name": "Authenticated users can delete workshops",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["authenticated"],
          "using": "true"
        },
        "Authenticated users can insert workshops": {
          "name": "Authenticated users can insert workshops",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"]
        },
        "Authenticated users can update workshops": {
          "name": "Authenticated users can update workshops",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"]
        },
        "Only authenticated users can view workshops": {
          "name": "Only authenticated users can view workshops",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["public"]
        },
        "Workshops are viewable by everyone": {
          "name": "Workshops are viewable by everyone",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["public"]
        }
      },
      "isRLSEnabled": true
    },
    "auth.schema_migrations": {
      "name": "schema_migrations",
      "schema": "auth",
      "columns": {
        "version": {
          "name": "version",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": true
    },
    "public.pre_reg": {
      "name": "pre_reg",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "byDefault",
            "name": "pre_reg_id_seq",
            "increment": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "startWith": "1",
            "cache": "1",
            "cycle": false,
            "schema": "public"
          }
        },
        "time": {
          "name": "time",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {},
      "policies": {},
      "isRLSEnabled": true
    }
  },
  "enums": {
    "auth.aal_level": {
      "name": "aal_level",
      "values": ["aal1", "aal2", "aal3"],
      "schema": "auth"
    },
    "auth.code_challenge_method": {
      "name": "code_challenge_method",
      "values": ["s256", "plain"],
      "schema": "auth"
    },
    "auth.factor_status": {
      "name": "factor_status",
      "values": ["unverified", "verified"],
      "schema": "auth"
    },
    "auth.factor_type": {
      "name": "factor_type",
      "values": ["totp", "webauthn", "phone"],
      "schema": "auth"
    },
    "auth.oauth_registration_type": {
      "name": "oauth_registration_type",
      "values": ["dynamic", "manual"],
      "schema": "auth"
    },
    "auth.one_time_token_type": {
      "name": "one_time_token_type",
      "values": [
        "confirmation_token",
        "reauthentication_token",
        "recovery_token",
        "email_change_token_new",
        "email_change_token_current",
        "phone_change_token"
      ],
      "schema": "auth"
    },
    "public.admin_role": {
      "name": "admin_role",
      "values": ["admin", "super_admin", "volunteer"],
      "schema": "public"
    },
    "public.admin_status": {
      "name": "admin_status",
      "values": ["active", "inactive", "suspended"],
      "schema": "public"
    },
    "public.parking_state": {
      "name": "parking_state",
      "values": ["Yes", "No", "Not sure"],
      "schema": "public"
    },
    "public.status": {
      "name": "status",
      "values": ["confirmed", "pending", "waitlisted"],
      "schema": "public"
    },
    "public.year_of_study": {
      "name": "year_of_study",
      "values": ["1st", "2nd", "3rd", "4th+", "Recent Grad"],
      "schema": "public"
    }
  },
  "schemas": {
    "auth": "auth"
  },
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {
    "public.admin_management_view": {
      "name": "admin_management_view",
      "schema": "public",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "role": {
          "name": "role",
          "type": "admin_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "admin_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "firstName": {
          "name": "firstName",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": false
        },
        "lastName": {
          "name": "lastName",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": false
        },
        "is_admin_only": {
          "name": "is_admin_only",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "last_sign_in_at": {
          "name": "last_sign_in_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "email_confirmed_at": {
          "name": "email_confirmed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "isExisting": false,
      "definition": "SELECT a.id, a.email, a.role, a.status, a.f_name AS \"firstName\", a.l_name AS \"lastName\", a.is_admin_only, a.created_at, a.updated_at, u.last_sign_in_at, u.email_confirmed_at FROM admins a JOIN auth.users u ON a.id = u.id ORDER BY a.created_at DESC",
      "materialized": false
    },
    "public.rsvpable_users": {
      "name": "rsvpable_users",
      "schema": "public",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "isExisting": false,
      "definition": "SELECT u.id FROM users u LEFT JOIN pre_reg p ON p.email = u.email::text WHERE u.status = ANY (ARRAY['pending'::status, 'waitlisted'::status]) ORDER BY (p.email IS NOT NULL) DESC, u.updated_at LIMIT 145",
      "materialized": false
    }
  },
  "_meta": {
    "schemas": {},
    "tables": {},
    "columns": {}
  },
  "internal": {
    "tables": {
      "users": {
        "columns": {
          "phone": {
            "isDefaultAnExpression": true
          }
        }
      }
    }
  }
}
