create table "public"."pre_reg" (
    "id" bigint generated by default as identity not null,
    "time" timestamp with time zone not null,
    "email" text not null
);


alter table "public"."pre_reg" enable row level security;

CREATE UNIQUE INDEX pre_reg_pkey ON public.pre_reg USING btree (id);

alter table "public"."pre_reg" add constraint "pre_reg_pkey" PRIMARY KEY using index "pre_reg_pkey";

create or replace view "public"."rsvpable_users" as  SELECT u.id
   FROM (users u
     LEFT JOIN pre_reg p ON ((p.email = (u.email)::text)))
  WHERE (u.status = ANY (ARRAY['pending'::status, 'waitlisted'::status]))
  ORDER BY (p.email IS NOT NULL) DESC, u.updated_at
 LIMIT 145;


grant delete on table "public"."pre_reg" to "anon";

grant insert on table "public"."pre_reg" to "anon";

grant references on table "public"."pre_reg" to "anon";

grant select on table "public"."pre_reg" to "anon";

grant trigger on table "public"."pre_reg" to "anon";

grant truncate on table "public"."pre_reg" to "anon";

grant update on table "public"."pre_reg" to "anon";

grant delete on table "public"."pre_reg" to "authenticated";

grant insert on table "public"."pre_reg" to "authenticated";

grant references on table "public"."pre_reg" to "authenticated";

grant select on table "public"."pre_reg" to "authenticated";

grant trigger on table "public"."pre_reg" to "authenticated";

grant truncate on table "public"."pre_reg" to "authenticated";

grant update on table "public"."pre_reg" to "authenticated";

grant delete on table "public"."pre_reg" to "service_role";

grant insert on table "public"."pre_reg" to "service_role";

grant references on table "public"."pre_reg" to "service_role";

grant select on table "public"."pre_reg" to "service_role";

grant trigger on table "public"."pre_reg" to "service_role";

grant truncate on table "public"."pre_reg" to "service_role";

grant update on table "public"."pre_reg" to "service_role";


