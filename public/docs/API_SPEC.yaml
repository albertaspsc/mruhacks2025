openapi: 3.0.3
info:
  title: Auth API
  version: 1.0.0
  description: API routes for user authentication and email management.

paths:
  /auth/change-email:
    post:
      summary: Change the user's email
      operationId: changeEmail
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                old:
                  type: string
                  format: email
                new:
                  type: string
                  format: email
              required: [old, new]
      responses:
        '302':
          description: Redirect to /register on success or /error on failure
          headers:
            Location:
              schema:
                type: string
        '401':
          description: User not authenticated
      security:
        - supabaseAuth: []

  /auth/callback:
    get:
      summary: Handles OAuth callback and exchanges code for a session
      parameters:
        - in: query
          name: code
          required: true
          schema:
            type: string
        - in: query
          name: next
          schema:
            type: string
            default: "/"
      responses:
        '302':
          description: Redirects to `next` path or /error
          headers:
            Location:
              schema:
                type: string

  /auth/logout:
    get:
      summary: Logs out the authenticated user and redirects
      parameters:
        - in: query
          name: next
          schema:
            type: string
            default: "/"
      responses:
        '302':
          description: Redirects to `next` after logout
          headers:
            Location:
              schema:
                type: string
      security:
        - supabaseAuth: []

  /auth/confirm:
    get:
      summary: Confirms an email OTP link
      parameters:
        - in: query
          name: token_hash
          required: true
          schema:
            type: string
        - in: query
          name: type
          required: true
          schema:
            type: string
            enum: [signup, magiclink, recovery, invite, email_change]
        - in: query
          name: email
          schema:
            type: string
            format: email
      responses:
        '302':
          description: Redirects to `/register` on success or `/error` on failure
          headers:
            Location:
              schema:
                type: string

  /login:
    post:
      summary: Log in or sign up using email and password
      operationId: loginOrSignup
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required: [email, password]
      responses:
        '302':
          description: Redirects based on result
          headers:
            Location:
              description: /register, /auth/confirm`, or /error
              schema:
                type: string
        '400':
          description: Invalid input

  /login/oauth/google:
    get:
      summary: Start Google OAuth flow
      operationId: loginWithGoogle
      responses:
        '302':
          description: Redirects to Google OAuth provider or `/error` on failure
          headers:
            Location:
              schema:
                type: string

components:
  securitySchemes:
    supabaseAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
